{"version":3,"file":"AuthPage-D02icFOZ.js","sources":["../../src/components/auth/AuthForm.jsx","../../src/components/auth/AuthPage.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  Box,\n  Button,\n  Typography,\n  Paper,\n  Alert,\n  useMediaQuery,\n} from '@mui/material';\nimport GamepadTextField from '../GamepadTextField';\nimport styles from './AuthForm.module.css';\n\nconst AuthForm = ({ onSubmit, mode }) => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const isMobile = useMediaQuery('(max-width:600px)');\n  const isSmallMobile = useMediaQuery('(max-width:400px)');\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setError('');\n    \n    try {\n      await onSubmit(username, password);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  return (\n    <Paper className={styles.authForm} elevation={0}>\n      <Typography variant=\"h5\" component=\"h2\" gutterBottom sx={{ color: 'var(--info)', fontWeight: 600 }}>\n        {mode === 'login' ? 'Welcome Back' : 'Create Account'}\n      </Typography>\n      \n      {error && (\n        <Alert severity=\"error\" sx={{ mb: 2, backgroundColor: 'rgba(231, 76, 60, 0.2)', color: 'var(--text-primary)' }}>\n          {error}\n        </Alert>\n      )}\n\n      <form onSubmit={handleSubmit}>\n        <GamepadTextField\n          title=\"Enter Username\"\n          label=\"Username\"\n          variant=\"outlined\"\n          fullWidth\n          margin=\"normal\"\n          value={username}\n          onChange={(e) => setUsername(e.target.value)}\n          required\n          size={isSmallMobile ? \"small\" : \"medium\"}\n          inputProps={{ minLength: 3 }}\n          sx={{\n            '& .MuiOutlinedInput-root': {\n              '& fieldset': {\n                borderColor: 'var(--info-light)',\n              },\n              '&:hover fieldset': {\n                borderColor: 'var(--info)',\n              },\n              '&.Mui-focused fieldset': {\n                borderColor: 'var(--info)',\n              },\n              backgroundColor: 'rgba(255, 255, 255, 0.1)',\n            },\n            '& .MuiInputLabel-root': {\n              color: 'var(--info-light)',\n              fontSize: isSmallMobile ? '0.9rem' : '1rem',\n            },\n            '& .MuiOutlinedInput-input': {\n              color: 'var(--text-dark)',\n              fontWeight: 500,\n              backgroundColor: 'rgba(255, 255, 255, 0.85)',\n              padding: isSmallMobile ? '12px 14px' : '16.5px 14px',\n            },\n            '& .MuiInputLabel-root.Mui-focused': {\n              color: 'var(--info)',\n            },\n            marginBottom: isSmallMobile ? '0.5rem' : '1rem',\n          }}\n        />\n        \n        <GamepadTextField\n          title=\"Enter Password\"\n          label=\"Password\"\n          type=\"password\"\n          variant=\"outlined\"\n          fullWidth\n          margin=\"normal\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          required\n          size={isSmallMobile ? \"small\" : \"medium\"}\n          inputProps={{ minLength: 6 }}\n          sx={{\n            '& .MuiOutlinedInput-root': {\n              '& fieldset': {\n                borderColor: 'var(--info-light)',\n              },\n              '&:hover fieldset': {\n                borderColor: 'var(--info)',\n              },\n              '&.Mui-focused fieldset': {\n                borderColor: 'var(--info)',\n              },\n              backgroundColor: 'rgba(255, 255, 255, 0.1)',\n            },\n            '& .MuiInputLabel-root': {\n              color: 'var(--info-light)',\n              fontSize: isSmallMobile ? '0.9rem' : '1rem',\n            },\n            '& .MuiOutlinedInput-input': {\n              color: 'var(--text-dark)',\n              fontWeight: 500,\n              backgroundColor: 'rgba(255, 255, 255, 0.85)',\n              padding: isSmallMobile ? '12px 14px' : '16.5px 14px',\n            },\n            '& .MuiInputLabel-root.Mui-focused': {\n              color: 'var(--info)',\n            },\n            marginBottom: isSmallMobile ? '0.5rem' : '1rem',\n          }}\n        />\n\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          fullWidth\n          size=\"large\"\n          className={styles.submitButton}\n          data-gamepad-focusable=\"true\"\n          sx={{\n            mt: isSmallMobile ? 2 : 3,\n            background: 'linear-gradient(to right, var(--info), var(--success))',\n            textTransform: 'none',\n            fontWeight: 'bold',\n            letterSpacing: '0.5px',\n            padding: isSmallMobile ? '10px' : '12px',\n            fontSize: isSmallMobile ? '0.9rem' : '1rem',\n            '&:hover': {\n              background: 'linear-gradient(to right, var(--info-dark), var(--success-dark))',\n              boxShadow: 'var(--shadow-lg)',\n              transform: 'translateY(-2px)'\n            }\n          }}\n        >\n          {mode === 'login' ? 'Sign In' : 'Create Account'}\n        </Button>\n      </form>\n    </Paper>\n  );\n};\n\nexport default AuthForm;\n","import React, { useState } from 'react';\nimport { Box, Button, Typography } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\nimport AuthForm from './AuthForm.jsx';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { useGamepadNavigation } from '../../hooks/useGamepadNavigation';\nimport styles from './AuthPage.module.css';\nimport AppHeader from '../common/AppHeader';\nimport { API_URL } from '../../config.js';\n\nconst AuthPage = () => {\n  const [mode, setMode] = useState('login');\n  const { login } = useAuth();\n  const navigate = useNavigate();\n  \n  // Initialize gamepad navigation\n  useGamepadNavigation(true);\n\n  const [error, setError] = useState(null);\n\n  const handleAuth = async (username, password) => {\n    if (!username || !password) {\n      setError('Username and password are required');\n      return;\n    }\n\n    setError(null);\n    const endpoint = `${API_URL}/auth/${mode}`;\n    \n\n    try {\n      const requestBody = { username, password };\n      const response = await fetch(endpoint, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        credentials: 'include',\n        body: JSON.stringify(requestBody),\n      });\n\n      let data;\n      try {\n        data = await response.json();\n      } catch (error) {\n        console.error('[Client] Error parsing response:', error);\n        throw new Error('Invalid response from server');\n      }\n      \n      if (!response.ok) {\n        throw new Error(data.message || 'Authentication failed');\n      }\n\n      if (!data.user?.username || !data.user?.id || !data.token) {\n        console.error('[Client] Invalid response format:', {\n          hasUser: !!data.user,\n          hasUsername: !!data.user?.username,\n          hasId: !!data.user?.id,\n          hasToken: !!data.token\n        });\n        throw new Error('Invalid server response format');\n      }\n\n      try {\n        login(data.user, data.token);\n        // Navigate to the lobby after successful login\n        navigate('/');\n      } catch (error) {\n        console.error('[Client] Error in login callback:', error);\n        throw new Error('Failed to initialize user session');\n      }\n    } catch (error) {\n      console.error('[Client] Auth error:', {\n        message: error.message,\n        endpoint,\n        mode\n      });\n      setError(error.message || 'Failed to connect to server');\n    }\n\n\n  };\n\n  return (\n    <Box className={styles.authPage}>\n      <AppHeader />\n      \n      <Box className={styles.formContainer}>\n        {error && (\n          <Typography className={styles.error}>\n            {error}\n          </Typography>\n        )}\n        \n        <AuthForm mode={mode} onSubmit={handleAuth} />\n        \n        <Box textAlign=\"center\" mt={3}>\n          <Button\n            color=\"primary\"\n            onClick={() => setMode(mode === 'login' ? 'register' : 'login')}\n            data-gamepad-focusable=\"true\"\n            sx={{\n              color: '#ecf0f1',\n              textTransform: 'none',\n              fontSize: '1rem',\n              '&:hover': {\n                backgroundColor: 'rgba(255, 255, 255, 0.1)'\n              }\n            }}\n          >\n            {mode === 'login' \n              ? \"Don't have an account? Register\" \n              : \"Already have an account? Login\"}\n          </Button>\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default AuthPage;\n"],"names":["AuthForm","onSubmit","mode","username","setUsername","useState","password","setPassword","error","setError","useMediaQuery","isSmallMobile","Paper","className","styles","elevation","children","jsx","Typography","variant","component","gutterBottom","sx","color","fontWeight","jsxRuntimeExports","Alert","severity","mb","backgroundColor","jsxs","async","e","preventDefault","err","message","GamepadTextField","title","label","fullWidth","margin","value","onChange","target","required","size","inputProps","minLength","borderColor","fontSize","padding","marginBottom","type","Button","mt","background","textTransform","letterSpacing","boxShadow","transform","AuthPage","setMode","login","useAuth","navigate","useNavigate","useGamepadNavigation","Box","AppHeader","endpoint","API_URL","requestBody","response","fetch","method","headers","credentials","body","JSON","stringify","data","json","console","Error","ok","_a","user","_b","id","token","hasUser","hasUsername","_c","hasId","_d","hasToken","textAlign","onClick"],"mappings":"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"}