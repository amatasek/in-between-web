{"version":3,"file":"AuthPage-BJdYI7Km.js","sources":["../../src/components/auth/AuthForm.jsx","../../src/components/auth/AuthPage.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  Box,\n  Button,\n  Typography,\n  Paper,\n  Alert,\n  useMediaQuery,\n} from '@mui/material';\nimport GamepadTextField from '../GamepadTextField';\nimport styles from './AuthForm.module.css';\n\nconst AuthForm = ({ onSubmit, mode }) => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const isMobile = useMediaQuery('(max-width:600px)');\n  const isSmallMobile = useMediaQuery('(max-width:400px)');\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setError('');\n    \n    try {\n      await onSubmit(username, password);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  return (\n    <Paper className={styles.authForm} elevation={0}>\n      <Typography variant=\"h5\" component=\"h2\" gutterBottom sx={{ color: 'var(--info)', fontWeight: 600 }}>\n        {mode === 'login' ? 'Welcome Back' : 'Create Account'}\n      </Typography>\n      \n      {error && (\n        <Alert severity=\"error\" sx={{ mb: 2, backgroundColor: 'rgba(231, 76, 60, 0.2)', color: 'var(--text-primary)' }}>\n          {error}\n        </Alert>\n      )}\n\n      <form onSubmit={handleSubmit}>\n        <GamepadTextField\n          title=\"Enter Username\"\n          label=\"Username\"\n          variant=\"outlined\"\n          fullWidth\n          margin=\"normal\"\n          value={username}\n          onChange={(e) => setUsername(e.target.value)}\n          required\n          size={isSmallMobile ? \"small\" : \"medium\"}\n          inputProps={{ minLength: 3 }}\n          sx={{\n            '& .MuiOutlinedInput-root': {\n              '& fieldset': {\n                borderColor: 'var(--info-light)',\n              },\n              '&:hover fieldset': {\n                borderColor: 'var(--info)',\n              },\n              '&.Mui-focused fieldset': {\n                borderColor: 'var(--info)',\n              },\n              backgroundColor: 'rgba(255, 255, 255, 0.1)',\n            },\n            '& .MuiInputLabel-root': {\n              color: 'var(--info-light)',\n              fontSize: isSmallMobile ? '0.9rem' : '1rem',\n            },\n            '& .MuiOutlinedInput-input': {\n              color: 'var(--text-dark)',\n              fontWeight: 500,\n              backgroundColor: 'rgba(255, 255, 255, 0.85)',\n              padding: isSmallMobile ? '12px 14px' : '16.5px 14px',\n            },\n            '& .MuiInputLabel-root.Mui-focused': {\n              color: 'var(--info)',\n            },\n            marginBottom: isSmallMobile ? '0.5rem' : '1rem',\n          }}\n        />\n        \n        <GamepadTextField\n          title=\"Enter Password\"\n          label=\"Password\"\n          type=\"password\"\n          variant=\"outlined\"\n          fullWidth\n          margin=\"normal\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          required\n          size={isSmallMobile ? \"small\" : \"medium\"}\n          inputProps={{ minLength: 6 }}\n          sx={{\n            '& .MuiOutlinedInput-root': {\n              '& fieldset': {\n                borderColor: 'var(--info-light)',\n              },\n              '&:hover fieldset': {\n                borderColor: 'var(--info)',\n              },\n              '&.Mui-focused fieldset': {\n                borderColor: 'var(--info)',\n              },\n              backgroundColor: 'rgba(255, 255, 255, 0.1)',\n            },\n            '& .MuiInputLabel-root': {\n              color: 'var(--info-light)',\n              fontSize: isSmallMobile ? '0.9rem' : '1rem',\n            },\n            '& .MuiOutlinedInput-input': {\n              color: 'var(--text-dark)',\n              fontWeight: 500,\n              backgroundColor: 'rgba(255, 255, 255, 0.85)',\n              padding: isSmallMobile ? '12px 14px' : '16.5px 14px',\n            },\n            '& .MuiInputLabel-root.Mui-focused': {\n              color: 'var(--info)',\n            },\n            marginBottom: isSmallMobile ? '0.5rem' : '1rem',\n          }}\n        />\n\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          fullWidth\n          size=\"large\"\n          className={styles.submitButton}\n          data-gamepad-focusable=\"true\"\n          sx={{\n            mt: isSmallMobile ? 2 : 3,\n            background: 'linear-gradient(to right, var(--info), var(--success))',\n            textTransform: 'none',\n            fontWeight: 'bold',\n            letterSpacing: '0.5px',\n            padding: isSmallMobile ? '10px' : '12px',\n            fontSize: isSmallMobile ? '0.9rem' : '1rem',\n            '&:hover': {\n              background: 'linear-gradient(to right, var(--info-dark), var(--success-dark))',\n              boxShadow: 'var(--shadow-lg)',\n              transform: 'translateY(-2px)'\n            }\n          }}\n        >\n          {mode === 'login' ? 'Sign In' : 'Create Account'}\n        </Button>\n      </form>\n    </Paper>\n  );\n};\n\nexport default AuthForm;\n","import React, { useState } from 'react';\nimport { Box, Button, Typography } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\nimport AuthForm from './AuthForm.jsx';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { useGamepadNavigation } from '../../hooks/useGamepadNavigation';\nimport styles from './AuthPage.module.css';\nimport AppHeader from '../common/AppHeader';\nimport { API_URL } from '../../config.js';\n\nconst AuthPage = () => {\n  const [mode, setMode] = useState('login');\n  const { login } = useAuth();\n  const navigate = useNavigate();\n  \n  // Initialize gamepad navigation\n  useGamepadNavigation(true);\n\n  const [error, setError] = useState(null);\n\n  const handleAuth = async (username, password) => {\n    if (!username || !password) {\n      setError('Username and password are required');\n      return;\n    }\n\n    setError(null);\n    const endpoint = `${API_URL}/auth/${mode}`;\n    \n\n    try {\n      const requestBody = { username, password };\n      const response = await fetch(endpoint, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        credentials: 'include',\n        body: JSON.stringify(requestBody),\n      });\n\n      let data;\n      try {\n        data = await response.json();\n      } catch (error) {\n        console.error('[Client] Error parsing response:', error);\n        throw new Error('Invalid response from server');\n      }\n      \n      if (!response.ok) {\n        throw new Error(data.message || 'Authentication failed');\n      }\n\n      if (!data.user?.username || !data.user?.id || !data.token) {\n        console.error('[Client] Invalid response format:', {\n          hasUser: !!data.user,\n          hasUsername: !!data.user?.username,\n          hasId: !!data.user?.id,\n          hasToken: !!data.token\n        });\n        throw new Error('Invalid server response format');\n      }\n\n      try {\n        login(data.user, data.token);\n        // Navigate to the lobby after successful login\n        navigate('/');\n      } catch (error) {\n        console.error('[Client] Error in login callback:', error);\n        throw new Error('Failed to initialize user session');\n      }\n    } catch (error) {\n      console.error('[Client] Auth error:', {\n        message: error.message,\n        endpoint,\n        mode\n      });\n      setError(error.message || 'Failed to connect to server');\n    }\n\n\n  };\n\n  return (\n    <Box className={styles.authPage}>\n      <AppHeader />\n      \n      <Box className={styles.formContainer}>\n        {error && (\n          <Typography className={styles.error}>\n            {error}\n          </Typography>\n        )}\n        \n        <AuthForm mode={mode} onSubmit={handleAuth} />\n        \n        <Box textAlign=\"center\" mt={3}>\n          <Button\n            color=\"primary\"\n            onClick={() => setMode(mode === 'login' ? 'register' : 'login')}\n            data-gamepad-focusable=\"true\"\n            sx={{\n              color: '#ecf0f1',\n              textTransform: 'none',\n              fontSize: '1rem',\n              '&:hover': {\n                backgroundColor: 'rgba(255, 255, 255, 0.1)'\n              }\n            }}\n          >\n            {mode === 'login' \n              ? \"Don't have an account? Register\" \n              : \"Already have an account? Login\"}\n          </Button>\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default AuthPage;\n"],"names":["useState","styles","jsx","jsxs","error"],"mappings":"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"}