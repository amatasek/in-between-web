{"version":3,"file":"useGamepadNavigation-BcjfaxZ8.js","sources":["../../src/hooks/useGamepadNavigation.js"],"sourcesContent":["import { useEffect, useState, useCallback, useRef } from 'react';\n\n/**\n * Custom hook for comprehensive gamepad navigation support\n * Provides 2D spatial navigation, scrollable content support, and modal awareness\n * \n * @param {boolean} isEnabled - Whether gamepad navigation is active\n * @returns {Object} Navigation state and utilities\n */\nexport const useGamepadNavigation = (isEnabled = true) => {\n  const [focusedElement, setFocusedElement] = useState(null);\n  const [navigableElements, setNavigableElements] = useState([]);\n  const [isGamepadConnected, setIsGamepadConnected] = useState(false);\n  const [showFocusIndicator, setShowFocusIndicator] = useState(false);\n  const lastNavigationTime = useRef(0);\n  const buttonStates = useRef({});\n  \n  const registerNavigableElements = useCallback(() => {\n    if (!isEnabled) return;\n    \n    // Find all focusable elements with data-gamepad-focusable attribute AND scrollable containers\n    const allElements = Array.from(\n      document.querySelectorAll('[data-gamepad-focusable=\"true\"]:not([disabled]), [data-gamepad-scrollable=\"true\"]')\n    );\n    \n    // Filter out elements that are hidden or behind modals\n    const visibleElements = allElements.filter(element => {\n      // Check if element is visible\n      const rect = element.getBoundingClientRect();\n      if (rect.width === 0 && rect.height === 0) {\n        // For hidden inputs (like auto-ante toggle), check the parent\n        const parent = element.closest('label') || element.closest('[class*=\"toggle\"]') || element.parentElement;\n        if (parent) {\n          const parentRect = parent.getBoundingClientRect();\n          if (parentRect.width === 0 || parentRect.height === 0) return false;\n        } else {\n          return false;\n        }\n      }\n      \n      // Check if element is behind a modal\n      const modals = document.querySelectorAll('[class*=\"modal\"], [class*=\"Modal\"], [role=\"dialog\"], [class*=\"overlay\"]');\n      if (modals.length > 0) {\n        // Filter to only get actual modal containers (not overlays)\n        const modalContainers = Array.from(modals).filter(modal => {\n          const className = modal.className;\n          // Look for actual modal content containers, not just overlays\n          return className.includes('modal') || className.includes('Modal') || modal.getAttribute('role') === 'dialog';\n        });\n        \n        if (modalContainers.length > 0) {\n          // Sort modals by z-index to find the topmost one\n          const sortedModals = modalContainers.sort((a, b) => {\n            let aZIndex = parseInt(window.getComputedStyle(a).zIndex) || 0;\n            let bZIndex = parseInt(window.getComputedStyle(b).zIndex) || 0;\n            \n            // If z-index is auto/0, check the parent overlay\n            if (aZIndex === 0) {\n              const aOverlay = a.parentElement;\n              if (aOverlay && aOverlay.classList.toString().includes('overlay')) {\n                aZIndex = parseInt(window.getComputedStyle(aOverlay).zIndex) || 0;\n              }\n            }\n            \n            if (bZIndex === 0) {\n              const bOverlay = b.parentElement;\n              if (bOverlay && bOverlay.classList.toString().includes('overlay')) {\n                bZIndex = parseInt(window.getComputedStyle(bOverlay).zIndex) || 0;\n              }\n            }\n            \n            return bZIndex - aZIndex; // Highest z-index first\n          });\n          \n          // Only include elements that are inside the topmost modal\n          const topmostModal = sortedModals[0];\n          return topmostModal && topmostModal.contains(element);\n        }\n      }\n      \n      return true;\n    });\n    \n    setNavigableElements(prevElements => {\n      // Only update if the elements actually changed\n      if (prevElements.length !== visibleElements.length || \n          !prevElements.every((el, i) => el === visibleElements[i])) {\n        return visibleElements;\n      }\n      return prevElements;\n    });\n  }, [isEnabled]);\n\n  const navigateDirection = useCallback((direction) => {\n    const now = Date.now();\n    if (now - lastNavigationTime.current < 150) {\n      return; // Debounce navigation calls\n    }\n    lastNavigationTime.current = now;\n    \n    if (!navigableElements.length) return;\n    \n    // Show focus indicator when navigating\n    setShowFocusIndicator(true);\n    \n    // Always check the actual focused element in the DOM first\n    const actualFocusedElement = document.activeElement;\n    let currentElement = focusedElement;\n    \n    // If the actual focused element is navigable and different from our state, sync it\n    if (actualFocusedElement && \n        actualFocusedElement.getAttribute('data-gamepad-focusable') === 'true' &&\n        navigableElements.includes(actualFocusedElement)) {\n      currentElement = actualFocusedElement;\n      setFocusedElement(actualFocusedElement);\n    }\n    \n    const currentIndex = navigableElements.findIndex(el => el === currentElement);\n    \n    // If no element is currently focused or element not found, start with first element\n    if (currentIndex === -1 || !currentElement) {\n      const firstElement = navigableElements[0];\n      setFocusedElement(firstElement);\n      firstElement.focus();\n      return;\n    }\n    \n    // Handle scrollable content before spatial navigation\n    const currentElem = navigableElements[currentIndex];\n    const isScrollable = currentElem?.getAttribute('data-gamepad-scrollable') === 'true';\n    \n    if (isScrollable && (direction === 'up' || direction === 'down')) {\n      const scrollAmount = 50;\n      const isAtTop = currentElem.scrollTop <= 0;\n      const isAtBottom = currentElem.scrollTop >= currentElem.scrollHeight - currentElem.clientHeight;\n      \n      if (direction === 'up' && !isAtTop) {\n        currentElem.scrollTop = Math.max(0, currentElem.scrollTop - scrollAmount);\n        return;\n      }\n      \n      if (direction === 'down' && !isAtBottom) {\n        currentElem.scrollTop = Math.min(\n          currentElem.scrollHeight - currentElem.clientHeight,\n          currentElem.scrollTop + scrollAmount\n        );\n        return;\n      }\n    }\n    \n    let nextElement = null;\n    \n    if (direction === 'up' || direction === 'down') {\n      // Vertical navigation with intelligent spatial detection\n      let currentRect = currentElem?.getBoundingClientRect();\n      if (!currentRect) return;\n      \n      // Handle zero-dimension elements (hidden inputs, toggles)\n      if (currentRect.width === 0 && currentRect.height === 0) {\n        const label = currentElem.closest('label');\n        const container = currentElem.closest('[class*=\"toggle\"]') || currentElem.closest('[class*=\"Toggle\"]');\n        const parent = label || container || currentElem.parentElement;\n        if (parent) {\n          currentRect = parent.getBoundingClientRect();\n        }\n      }\n      \n      const currentCenterX = currentRect.left + currentRect.width / 2;\n      \n      // Get all candidates in the target direction\n      const candidates = navigableElements\n        .map((el, index) => ({ el, index, rect: el.getBoundingClientRect() }))\n        .filter(({ el, rect, index }) => {\n          // Exclude the current element\n          if (index === currentIndex) return false;\n          \n          if (direction === 'up') {\n            return rect.bottom <= currentRect.top + 20; // More generous tolerance for upward navigation\n          } else {\n            return rect.top >= currentRect.bottom - 20; // More generous tolerance for downward navigation\n          }\n        });\n      \n      \n      if (candidates.length > 0) {\n        // Sort candidates by horizontal distance from current element\n        const sortedCandidates = candidates\n          .map(candidate => ({\n            ...candidate,\n            horizontalDistance: Math.abs(candidate.rect.left + candidate.rect.width / 2 - currentCenterX),\n            verticalDistance: direction === 'up' \n              ? currentRect.top - candidate.rect.bottom \n              : candidate.rect.top - currentRect.bottom\n          }))\n          .sort((a, b) => {\n            const horizontalDiff = a.horizontalDistance - b.horizontalDistance;\n            if (Math.abs(horizontalDiff) > 100) {\n              return horizontalDiff;\n            }\n            const verticalDiff = a.verticalDistance - b.verticalDistance;\n            if (Math.abs(verticalDiff) > 10) {\n              return verticalDiff;\n            }\n            return horizontalDiff;\n          });\n        \n        nextElement = sortedCandidates[0].el;\n      } else {\n        // No elements in target direction - find closest element in ANY direction\n        const allOtherElements = navigableElements\n          .filter((el, index) => index !== currentIndex)\n          .map((el, index) => ({ el, rect: el.getBoundingClientRect() }));\n        \n        if (allOtherElements.length > 0) {\n          // Find the element closest to where we want to go\n          const targetY = direction === 'up' ? 0 : window.innerHeight;\n          const closest = allOtherElements.reduce((best, candidate) => {\n            const candidateDistance = Math.abs(candidate.rect.top - targetY);\n            const bestDistance = Math.abs(best.rect.top - targetY);\n            return candidateDistance < bestDistance ? candidate : best;\n          });\n          nextElement = closest.el;\n        } else {\n          // Ultimate fallback - wrap around\n          if (direction === 'up') {\n            nextElement = navigableElements[navigableElements.length - 1];\n          } else {\n            nextElement = navigableElements[0];\n          }\n        }\n      }\n    } else {\n      // Horizontal navigation within rows\n      const currentRect = currentElem?.getBoundingClientRect();\n      if (!currentRect) {\n        if (direction === 'left') {\n          nextElement = currentIndex > 0 ? navigableElements[currentIndex - 1] : navigableElements[navigableElements.length - 1];\n        } else {\n          nextElement = currentIndex < navigableElements.length - 1 ? navigableElements[currentIndex + 1] : navigableElements[0];\n        }\n      } else {\n        const currentCenterY = currentRect.top + currentRect.height / 2;\n        const rowTolerance = Math.max(currentRect.height / 2, 20);\n        \n        const sameRowElements = navigableElements\n          .map((el, index) => ({ el, index, rect: el.getBoundingClientRect() }))\n          .filter(({ rect, index }) => {\n            const candidateCenterY = rect.top + rect.height / 2;\n            return Math.abs(candidateCenterY - currentCenterY) <= rowTolerance;\n          })\n          .sort((a, b) => a.rect.left - b.rect.left);\n        \n        const currentRowIndex = sameRowElements.findIndex(({ el }) => el === currentElem);\n        \n        if (currentRowIndex !== -1 && sameRowElements.length > 1) {\n          if (direction === 'left') {\n            nextElement = currentRowIndex > 0 ? sameRowElements[currentRowIndex - 1].el : null;\n          } else {\n            nextElement = currentRowIndex < sameRowElements.length - 1 ? sameRowElements[currentRowIndex + 1].el : null;\n          }\n        } else {\n          nextElement = null;\n        }\n      }\n    }\n    \n    if (nextElement) {\n      setFocusedElement(nextElement);\n      nextElement.focus();\n    }\n  }, [navigableElements, focusedElement]);\n\n  const activateElement = useCallback(() => {\n    // Check actual DOM focus first, fallback to our tracked element\n    const elementToActivate = document.activeElement?.getAttribute('data-gamepad-focusable') === 'true' \n      ? document.activeElement \n      : focusedElement;\n      \n    if (elementToActivate) {\n      // Show focus indicator when activating\n      setShowFocusIndicator(true);\n      // Simulate click on the focused element\n      elementToActivate.click();\n    }\n  }, [focusedElement]);\n\n  // Handle keyboard input for testing\n  useEffect(() => {\n    if (!isEnabled) return;\n\n    const handleKeyDown = (e) => {\n      // Check if we're in a text input field\n      const isTextInput = document.activeElement && (\n        document.activeElement.tagName === 'INPUT' || \n        document.activeElement.tagName === 'TEXTAREA'\n      );\n\n      // For text inputs, only prevent default for arrow keys (not Enter)\n      // This allows normal form submission with Enter key\n      if (isTextInput && e.key === 'Enter') {\n        // Don't prevent default, don't activate element\n        // Let the form handle the Enter key naturally\n        return;\n      }\n\n      // Prevent default behavior for navigation keys\n      if (['ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight', 'Enter', ' '].includes(e.key)) {\n        e.preventDefault();\n      }\n\n      switch (e.key) {\n        case 'ArrowUp':\n          navigateDirection('up');\n          break;\n        case 'ArrowDown':\n          navigateDirection('down');\n          break;\n        case 'ArrowLeft':\n          navigateDirection('left');\n          break;\n        case 'ArrowRight':\n          navigateDirection('right');\n          break;\n        case 'Enter':\n        case ' ': // Space bar\n          activateElement();\n          break;\n      }\n    };\n\n    document.addEventListener('keydown', handleKeyDown);\n    return () => document.removeEventListener('keydown', handleKeyDown);\n  }, [navigateDirection, activateElement, isEnabled]);\n\n  // Handle gamepad detection and input with native Gamepad API\n  useEffect(() => {\n    if (!isEnabled) return;\n\n    let animationFrame;\n\n    const checkGamepads = () => {\n      const gamepads = navigator.getGamepads();\n      let connected = false;\n\n      for (let i = 0; i < gamepads.length; i++) {\n        const gamepad = gamepads[i];\n        if (gamepad && gamepad.connected) {\n          connected = true;\n          \n          // Track button press states to avoid spamming\n          if (!buttonStates.current[i]) {\n            buttonStates.current[i] = {};\n          }\n          \n          const prevStates = buttonStates.current[i];\n          \n          // D-pad buttons (standard mapping: 12=up, 13=down, 14=left, 15=right)\n          const upPressed = gamepad.buttons[12]?.pressed;\n          const downPressed = gamepad.buttons[13]?.pressed;\n          const leftPressed = gamepad.buttons[14]?.pressed;\n          const rightPressed = gamepad.buttons[15]?.pressed;\n          const aPressed = gamepad.buttons[0]?.pressed; // A button\n\n          // Only trigger on button press (not hold)\n          if (upPressed && !prevStates.up) {\n            navigateDirection('up');\n          }\n          if (downPressed && !prevStates.down) {\n            navigateDirection('down');\n          }\n          if (leftPressed && !prevStates.left) {\n            navigateDirection('left');\n          }\n          if (rightPressed && !prevStates.right) {\n            navigateDirection('right');\n          }\n          if (aPressed && !prevStates.a) {\n            activateElement();\n          }\n\n          // Update previous states\n          prevStates.up = upPressed;\n          prevStates.down = downPressed;\n          prevStates.left = leftPressed;\n          prevStates.right = rightPressed;\n          prevStates.a = aPressed;\n\n          // Left analog stick navigation\n          const leftStickX = gamepad.axes[0] || 0;\n          const leftStickY = gamepad.axes[1] || 0;\n          const deadzone = 0.3;\n\n          if (!prevStates.stickMoved && (Math.abs(leftStickX) > deadzone || Math.abs(leftStickY) > deadzone)) {\n            if (Math.abs(leftStickX) > Math.abs(leftStickY)) {\n              if (leftStickX > deadzone) {\n                navigateDirection('right');\n              } else if (leftStickX < -deadzone) {\n                navigateDirection('left');\n              }\n            } else {\n              if (leftStickY > deadzone) {\n                navigateDirection('down');\n              } else if (leftStickY < -deadzone) {\n                navigateDirection('up');\n              }\n            }\n            prevStates.stickMoved = true;\n          } else if (Math.abs(leftStickX) <= deadzone && Math.abs(leftStickY) <= deadzone) {\n            prevStates.stickMoved = false;\n          }\n\n          // Right analog stick page scrolling\n          const rightStickX = gamepad.axes[2] || 0;\n          const rightStickY = gamepad.axes[3] || 0;\n          const scrollDeadzone = 0.2;\n          const scrollSpeed = 8;\n\n          if (Math.abs(rightStickY) > scrollDeadzone) {\n            const scrollAmount = rightStickY * scrollSpeed;\n            window.scrollBy(0, scrollAmount);\n          }\n          \n          if (Math.abs(rightStickX) > scrollDeadzone) {\n            const scrollAmount = rightStickX * scrollSpeed;\n            window.scrollBy(scrollAmount, 0);\n          }\n        }\n      }\n\n      setIsGamepadConnected(connected);\n      animationFrame = requestAnimationFrame(checkGamepads);\n    };\n\n    checkGamepads();\n\n    return () => {\n      if (animationFrame) {\n        cancelAnimationFrame(animationFrame);\n      }\n    };\n  }, [navigateDirection, activateElement, isEnabled]);\n\n  // Hide focus indicator on mouse movement\n  useEffect(() => {\n    if (!isEnabled) return;\n\n    const handleMouseMove = () => {\n      setShowFocusIndicator(false);\n    };\n\n    document.addEventListener('mousemove', handleMouseMove);\n    return () => document.removeEventListener('mousemove', handleMouseMove);\n  }, [isEnabled]);\n\n  // Add/remove CSS class to body to control focus indicator visibility\n  useEffect(() => {\n    if (showFocusIndicator) {\n      document.body.classList.add('gamepad-navigation-active');\n    } else {\n      document.body.classList.remove('gamepad-navigation-active');\n    }\n\n    // Cleanup on unmount\n    return () => {\n      document.body.classList.remove('gamepad-navigation-active');\n    };\n  }, [showFocusIndicator]);\n\n  // Handle initial focus when elements are available  \n  useEffect(() => {\n    if (navigableElements.length > 0 && !focusedElement) {\n      const firstElement = navigableElements[0];\n      setFocusedElement(firstElement);\n      // Don't focus initially - let autoFocus handle it\n      // firstElement.focus();\n    }\n  }, [navigableElements.length]); // Only depend on length, not the array itself\n  \n  // Sync focus state when elements gain focus outside of gamepad navigation\n  useEffect(() => {\n    if (!isEnabled) return;\n    \n    const handleFocusChange = (e) => {\n      // Check if the focused element is a navigable element\n      const target = e.target;\n      if (target && target.getAttribute('data-gamepad-focusable') === 'true') {\n        // Register elements first to ensure the list is up to date\n        registerNavigableElements();\n        // Small delay to let the registration complete\n        setTimeout(() => {\n          // Find the element in our navigable elements list\n          const currentNavigableElements = Array.from(\n            document.querySelectorAll('[data-gamepad-focusable=\"true\"]:not([disabled]), [data-gamepad-scrollable=\"true\"]')\n          );\n          \n          if (currentNavigableElements.includes(target)) {\n            setFocusedElement(target);\n            // Don't show focus indicator on programmatic focus (like autoFocus)\n            // Only show it when navigating with keyboard/gamepad\n            // setShowFocusIndicator(true);\n          }\n        }, 0);\n      }\n    };\n    \n    // Listen for focus events globally to catch autoFocus and programmatic focus changes\n    document.addEventListener('focus', handleFocusChange, true); // Use capture phase\n    \n    return () => {\n      document.removeEventListener('focus', handleFocusChange, true);\n    };\n  }, [isEnabled, registerNavigableElements]);\n\n  // Re-register elements when DOM changes\n  useEffect(() => {\n    if (!isEnabled) return;\n    \n    const observer = new MutationObserver(registerNavigableElements);\n    observer.observe(document.body, {\n      childList: true,\n      subtree: true,\n      attributes: true,\n      attributeFilter: ['data-gamepad-focusable', 'disabled']\n    });\n    \n    // Initial registration\n    registerNavigableElements();\n    \n    return () => observer.disconnect();\n  }, [registerNavigableElements, isEnabled]);\n\n  return {\n    focusedElement,\n    isGamepadConnected,\n    showFocusIndicator,\n    registerNavigableElements\n  };\n};"],"names":["useState","useRef","useCallback","useEffect"],"mappings":"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"}